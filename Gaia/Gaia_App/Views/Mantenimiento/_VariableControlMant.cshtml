@model Gaia.DAL.Model.GaiaVariableControl

<div class="content">
    <div class="flex-grid">
        <div class="row padding10 flex-jus-center">
            <div class="cell size8 padding10 no-padding-left">
                <div data-role="window" class="window">
                    <div class="window-caption">
                        <span class="window-caption-title">VariableControl</span>
                    </div>
                    <div class="window-content">
                        <div class="row flex-just-center">
                            <div class="cell size6">
                                <label class="input-control text full-size">
                                    @Html.TextBoxFor(model => model.VariableControlId, new { id = "hfIdVC", PlaceHolder = "Id" })
                                    @Html.ValidationMessage("id", "* Campo Requerido *", new { id = "lblvcid", @style = "color:red; display: none;" })
                                </label>
                            </div>
                        </div>
                        <div class="row flex-just-center">
                            <div class="cell size6">
                                <label class="input-control text full-size">
                                    @Html.TextBoxFor(model => model.Descripcion, new { id = "txtdVC", PlaceHolder = "Descripción" })
                                    @Html.ValidationMessage("Descripcion", "* Campo Requerido *", new { id = "lblvcd", @style = "color:red; display: none;" })
                                </label>
                            </div>
                        </div>
                        <div class="row flex-just-center">
                            <div class="cell size6">
                                <label class="input-control textarea full-size" data-role="input" data-text-auto-resize="true">
                                    @Html.TextAreaFor(model => model.Cadena, new { id = "txtcVC", PlaceHolder = "Cadena" })
                                    @Html.ValidationMessage("Cadena", "* Campo Requerido *", new { id = "lblvcc", @style = "color:red; display: none;" })
                                </label>
                            </div>
                        </div>
                        <div class="row flex-just-center">
                            <div class="cell size6">
                                <label class="input-control text full-size">
                                    @Html.TextBoxFor(model => model.Fecha, new { id = "txtfVC", PlaceHolder = "Fecha" })
                                    @Html.ValidationMessage("Fecha", "* Campo Requerido *", new { id = "lblvcf", @style = "color:red; display: none;" })
                                </label>
                            </div>
                        </div>
                        <div class="row flex-just-center">
                            <div class="cell size6">
                                <label class="input-control text full-size">
                                    @Html.TextBoxFor(model => model.Numerico, new { id = "txtnVC", PlaceHolder = "Numerico" })
                                    @Html.ValidationMessage("Numerico", "* Campo Requerido *", new { id = "lblvcn", @style = "color:red; display: none;" })
                                </label>
                            </div>
                        </div>
                        <div class="row flex-just-center">
                            <div class="cell size6">
                                <label class="input-control text full-size">
                                    @Html.TextBoxFor(model => model.TablaRel, new { id = "txttrVC", PlaceHolder = "TablaRel" })
                                    @Html.ValidationMessage("TablaRel", "* Campo Requerido *", new { id = "lblvctr", @style = "color:red; display: none;" })
                                </label>
                            </div>
                        </div>
                        <div class="row flex-just-center">
                            <div class="cell size6">
                                <label class="input-control text full-size">
                                    @Html.TextBoxFor(model => model.CampoRel, new { id = "txtcrVC", PlaceHolder = "CampoRel" })
                                    @Html.ValidationMessage("CampoRel", "* Campo Requerido *", new { id = "lblvccr", @style = "color:red; display: none;" })
                                </label>
                            </div>
                        </div>
                        <div class="row flex-just-center" id="ActivosVR">
                            <label class="input-control checkbox small-check">
                                <input type="checkbox" id="activovr" value="true" checked>
                                <span class="check"></span>
                                <span class="caption">Activo</span>
                            </label>
                            <label class="input-control checkbox small-check">
                                <input type="checkbox" id="inactivovr" value="false">
                                <span class="check"></span>
                                <span class="caption">Inactivo</span>
                            </label>
                        </div>
                        <div class="row flex-just-center">
                            <div class="toolbar">
                                <div class="toolbar-section">
                                    <button class="image-button ribbed-darkBlue" data-tabcontinuar="data-tabcontinuar" id="btnGuardaVariable" onclick="AgregarVariable()">
                                        <span class="fg-white">Guardar</span>
                                        <span class="icon mif-floppy-disk fg-white bg-darkBlue"></span>
                                    </button>
                                    <button class="image-button ribbed-darkOrange" data-tabcontinuar="data-tabcontinuar" id="btnActualizarVariable" onclick="ActualizarVariable()" style="display: none">
                                        <span class="fg-white">Actualizar</span>
                                        <span class="icon mif-pencil fg-white bg-darkOrange"></span>
                                    </button>
                                    <button class="image-button ribbed-darkEmerald" data-tabcontinuar="data-tabcontinuar" id="btnNuevoVariable" onclick="NuevaVariable()">
                                        <span class="fg-white">Nuevo</span>
                                        <span class="icon mif-plus fg-white bg-darkEmerald"></span>
                                    </button>
                                </div> @*toolbar section*@
                            </div>@*toolbar*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@using (Html.BeginScriptContext())
{
    Html.AddScriptBlock(
        @<script type="text/javascript">
            function ActualizarVariable() {
                var bandera = true;
                showalertify();

                if ($('#hfIdVC').val().toString().length < 1) {
                    $("#lblvcid").show();
                    bandera = false;
                }

                if ($('#txtdVC').val().toString().length < 1) {
                    $("#lblvcd").show();
                    bandera = false;
                }

                if ($('#txttrVC').val().toString().length < 1) {
                    $("#lblvctr").show();
                    bandera = false;
                }

                if ($('#txtcrVC').val().toString().length < 1) {
                    $("#lblvccr").show();
                    bandera = false;
                }

                if (bandera == true) {
                    $("#lblvcid").hide();
                    $("#lblvctr").hide();
                    $("#lblvccr").hide();
                    $("#lblvcd").hide();

                    var listaCheck = $("#ActivosVR input[type='checkbox']");
                    $.each(listaCheck, function (index, value) {
                        if ($(value).prop('checked') === true) {
                            Activo = value.value
                        }
                    });

                    var variablejson = JSON.stringify({ "VariableControlId": $('#hfIdVC').val(), "Descripcion": $('#txtdVC').val(), "Cadena": $('#txtcVC').val(), "Fecha": $('#txtfVC').val(), "Numerico": $('#txtnVC').val(), "TablaRel": $('#txttrVC').val(), "CampoRel": $('#txtcrVC').val(), "Activo": Activo });

                    var url = obtenerURL('/Mantenimiento/ActualizarVariableControl?variablecontroljson=' + variablejson + '&VariableId=' + $('#hfIdVC').val());
                    $.post(url)
                       .done(function (data) {
                           var listado = JSON.parse(data);                           

                           if (listado.Resultado === "true") {
                               $('#frVariableControl').empty();
                               $('#frVariableControl').load(obtenerURL("/Mantenimiento/ListaVariableControl"));
                               closealertify;
                               alertify.alert().destroy();
                               alertify.alert('Confirmación', listado.Mensaje);
                               alertify.alert().setting('modal', true);
                           }
                           else {
                               closealertify();
                               alertify.alert().destroy();
                               alertify.alert('Advertencia', listado.Mensaje);
                               alertify.alert().setting('modal', true);
                           }
                       })
                }
                else {
                    closePreloader("dialogPreloader");
                    alertify.alert().destroy();
                    alertify.alert('Advertencia', 'Llenar todos los campos obligatorios');
                    alertify.alert().setting('modal', true);
                }
            }

            function AgregarVariable() {
                var bandera = true;
                showalertify();

                if ($('#hfIdVC').val().toString().length < 1) {
                    $("#lblvcid").show();
                    bandera = false;
                }

                if ($('#txtdVC').val().toString().length < 1) {
                    $("#lblvcd").show();
                    bandera = false;
                }

                if ($('#txttrVC').val().toString().length < 1) {
                    $("#lblvctr").show();
                    bandera = false;
                }

                if ($('#txtcrVC').val().toString().length < 1) {
                    $("#lblvccr").show();
                    bandera = false;
                }

                if (bandera == true) {
                    $("#lblvcid").hide();
                    $("#lblvctr").hide();
                    $("#lblvccr").hide();
                    $("#lblvcd").hide();

                    var listaCheck = $("#ActivosVR input[type='checkbox']");
                    $.each(listaCheck, function (index, value) {
                        if ($(value).prop('checked') === true) {
                            Activo = value.value
                        }
                    });                    

                    var variablejson = JSON.stringify({ "VariableControlId": $('#hfIdVC').val(), "Descripcion": $('#txtdVC').val(), "Cadena": $('#txtcVC').val(), "Fecha": $("#txtfVC").val(), "Numerico": $('#txtnVC').val(), "TablaRel": $('#txttrVC').val(), "CampoRel": $('#txtcrVC').val(), "Activo": Activo });

                    var url = obtenerURL('/Mantenimiento/AgregarVariableControl?variablecontroljson=' + variablejson);
                    $.post(url)
                       .done(function (data) {
                           var listado = JSON.parse(data);

                           if (listado.Resultado === "true") {
                               $('#frVariableControl').empty();
                               $('#frVariableControl').load(obtenerURL("/Mantenimiento/ListaVariableControl"));
                               closealertify();
                               alertify.alert().destroy();
                               alertify.alert('Confirmación', listado.Mensaje);
                               alertify.alert().setting('modal', true);
                           }
                           else {
                               closealertify();
                               alertify.alert().destroy();
                               alertify.alert('Advertencia', listado.Mensaje);
                               alertify.alert().setting('modal', true);
                           }
                       })
                }
                else {
                    closePreloader("dialogPreloader");
                    alertify.alert().destroy();
                    alertify.alert('Advertencia', 'Llenar todos los campos obligatorios');
                    alertify.alert().setting('modal', true);
                }
            }

            function NuevaVariable() {
                $('#hfIdVC').prop("disabled", false);
                $('#hfIdVC').val("")
                $('#txtdVC').val("");
                $('#txtcVC').val("");
                $('#txtfVC').val("");
                var now = new Date();
                var twoDigitMonth = ((now.getMonth() + 1) >= 10) ? (now.getMonth() + 1) : '0' + (now.getMonth() + 1);
                var twoDigitDate = ((now.getDate() + 1) >= 11) ? (now.getDate()) : '0' + (now.getDate());
                var today = twoDigitDate + '/' + twoDigitMonth + '/' + now.getFullYear();
                $('#txtfVC').val(today);
                $("#txtfVC").inputmask("99/99/9999");
                $('#txtnVC').val("");
                $('#txttrVC').val("");
                $('#txtcrVC').val("");
                $('#btnActualizarVariable').hide();
                $('#btnGuardaVariable').show();
            }

            $(document).ready(function () {
                var now = new Date();
                var twoDigitMonth = ((now.getMonth() + 1) >= 10) ? (now.getMonth() + 1) : '0' + (now.getMonth() + 1);
                var twoDigitDate = ((now.getDate() + 1) >= 11) ? (now.getDate()) : '0' + (now.getDate());
                var today = twoDigitDate + '/' + twoDigitMonth + '/' + now.getFullYear();
                $('#txtfVC').val(today);
                $("#txtfVC").inputmask("99/99/9999");
                //$('#ActivosVR input[type=checkbox]').click(function () {
                //    $('#ActivosVR input[type=checkbox]').prop("checked", false);
                //    $(this).prop("checked", true);
                //});
            });
        </script>
, true);
}
